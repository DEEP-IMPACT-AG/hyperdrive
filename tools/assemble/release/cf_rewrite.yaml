AWSTemplateFormatVersion: '2010-09-09'
Description: Cloudformation Rewrite Function
Parameters:
  HyperdriveCore:
    Type: String
    Default: HyperdriveCore
Resources:
  CfRewriteRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service:
            - lambda.amazonaws.com
            - edgelambda.amazonaws.com
          Action:
          - "sts:AssumeRole"
      Policies:
      - PolicyName: logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            Resource:
            - "arn:aws:logs:*:*:*"
  CfRewriteFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          'use strict';
          exports.handler = (event, context, callback) => {

              // Extract the request from the CloudFront event that is sent to Lambda@Edge
              let request = event.Records[0].cf.request;

              // Extract the URI from the request
              let olduri = request.uri;

              let newuri;
              let i = olduri.lastIndexOf("/");
              // if the last segment of the uri contains a dot, we have document, otherwise a folder with or without
              // slash present at the end.
              if (olduri.substring(i).indexOf(".") > 1) {
                  newuri = olduri
              } else if (i === olduri.length - 1) {
                  newuri = olduri + "index.hmtl"
              } else {
                  newuri = olduri + "/index.hmtl"
              }

              // Log the URI as received by CloudFront and the new URI to be used to fetch from origin
              console.log("Old URI: " + olduri);
              console.log("New URI: " + newuri);

              // Replace the received URI with the URI that includes the index page
              request.uri = newuri;

              // Return to CloudFront
              return callback(null, request);

          };
      Description: CF rewrite for index on folder
      Handler: index.handler
      MemorySize: 128
      Role:
        Fn::GetAtt: [CfRewriteRole, "Arn"]
      Runtime: nodejs6.10
      Timeout: 1
  CfRewriteFunctionVersion1:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName:
        Ref: CfRewriteFunction
Outputs:
  Arn:
    Value:
      Fn::GetAtt: [CfRewriteFunction, "Arn"]
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-Arn"
  VersionArn:
    Value:
      Ref: CfRewriteFunctionVersion1
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-VersionArn"