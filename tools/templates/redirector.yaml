AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Resources:
  RedirectorApi:
    Type: "AWS::Serverless::Api"
    Properties:
      Name: "HyperdriveRedirector-{{.data.stageName}}"
      StageName: "{{.data.stageName}}"
      DefinitionBody:
        swagger: "2.0"
        info:
          version: "1.0"
        schemes:
          - "https"
        paths:
          /:
            get:
              consumes:
                - "application/json"
              responses:
                "301":
                  description: "301 response"
                  headers:
                    Location:
                      type: "string"
              x-amazon-apigateway-integration:
                responses:
                  "301":
                    statusCode: "301"
                    responseParameters:
                      method.response.header.Location: "{{.data.redirectLocation}}"
                requestTemplates:
                  application/json: "{\"statusCode\": 301}"
                passthroughBehavior: "when_no_match"
                type: "mock"
        definitions:
          Empty:
            type: "object"
            title: "Empty Schema"
  Certificate:
    Type: "Custom::DnsCertificate"
    Properties:
      ServiceToken: !ImportValue HyperdriveLambda-DnsCertificate
      DomainName: {{.data.subdomain}}.{{.data.domain}}
      Region: us-east-1
  CertDnsRecords:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: {{.data.domain}}.
      RecordSets:
        - Name:
            Fn::GetAtt: [Certificate, "{{.data.subdomain}}.{{.data.domain}}-RecordName"]
          ResourceRecords:
            - Fn::GetAtt: [Certificate, "{{.data.subdomain}}.{{.data.domain}}-RecordValue"]
          TTL: 300
          Type: CNAME
        - Name: {{.data.subdomain}}.{{.data.domain}}.
          ResourceRecords:
            - "0 issue \"amazon.com\""
          TTL: 300
          Type: CAA
  CertificateCondition:
    Type: AWS::CloudFormation::WaitCondition
    Properties:
      Count: 1
      Handle: !Ref CertificateConditionHandle
      Timeout: 3600
  CertificateConditionHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
    Properties: {}
  DomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: !Ref Certificate
      DomainName: {{.data.subdomain}}.{{.data.domain}}
      EndpointConfiguration:
        Types:
          - EDGE
    DependsOn:
      - CertificateCondition
  AliasDnsRecords:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: {{.data.domain}}.
      RecordSets:
        - Name: {{.data.subdomain}}.{{.data.domain}}.
          AliasTarget:
            DNSName: !GetAtt DomainName.DistributionDomainName
            HostedZoneId: !GetAtt DomainName.DistributionHostedZoneId
          Type: A
  PathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref DomainName
      RestApiId: !ImportValue HyperdriveRedirector-Api
      Stage: "{{.data.stageName}}"

